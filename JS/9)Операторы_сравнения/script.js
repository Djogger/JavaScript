/* Операторы сравнения */

/*
Больше/меньше: a > b, a < b.
Больше/меньше или равно: a >= b, a <= b.
Равно: a == b. Обратите внимание, для сравнения используется двойной знак равенства ==. Один знак равенства a = b означал бы присваивание.
Не равно. В математике обозначается символом ≠, но в JavaScript записывается как a != b.
*/

// Результат сравнения имеет логический тип:

// Все операторы сравнения возвращают значение логического типа:

// true – означает «да», «верно», «истина».
// false – означает «нет», «неверно», «ложь».

alert( 2 > 1 );  // true (верно)
alert( 2 == 1 ); // false (неверно)
alert( 2 != 1 ); // true (верно)

let result = 5 > 4; // результат сравнения можно присваивать.
alert(result); // true



// Сравнение строк:

alert("Я" > "А"); // true
alert("ЯЯ" > "Я"); // true
alert("Сонный" > "Сон"); // true
alert("а" > "А"); // true, wait... TRUE!!!??? (0_o ):

/*------> в JavaScript имеет значение регистр символов. Заглавная буква "A" не равна строчной "a". 
Какая же из них больше? Строчная "a". Почему? Потому что строчные буквы имеют больший код во 
внутренней таблице кодирования, которую использует JavaScript (Unicode).*/

// Сравнение разных типов:

alert('2' > 1); // true,строка '2' становится числом 2.
alert('01' == 1); // true, строка '01' становится числом 1.

alert(true == 1); // true.
alert(false == 0); // true.

// Строгое сравнение '===':

// Если типы разные, то '===' мгновенно возвращает false. (Ещё есть !==)

alert('1' === 1); // false.

// Сравнение с null и undefined:

alert(null === undefined); // false

alert(null == undefined); // true

// Сравнение null и undefined:

/* ( При использовании математических операторов и других операторов сравнения < > <= >=
Значения null/undefined преобразуются к числам: null становится 0, а undefined – NaN. ) */

// Сравнение null и 0:

alert( null > 0 );  // (1) false
alert( null == 0 ); // (2) false
alert( null >= 0 ); // (3) true

// Сравнение undefined и 0:

alert( undefined > 0 ); // false (1)
alert( undefined < 0 ); // false (2)
alert( undefined == 0 ); // false (3).